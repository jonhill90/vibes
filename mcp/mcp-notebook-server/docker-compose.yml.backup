
services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: inmpara-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_HTTP_PORT:-6335}:6333"  # HTTP API
      - "${QDRANT_PORT:-6336}:6334"       # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  # INMPARA MCP Server
  mcp-server:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: inmpara-mcp-server
    restart: unless-stopped
    depends_on:
      - qdrant
    
    environment:
      # Vault and database paths (using env vars)
      - VAULT_PATH=${CONTAINER_VAULT_PATH:-/app/vault}
      - DATABASE_PATH=${CONTAINER_VAULT_PATH:-/app/vault}/.notebook/inmpara.db
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - PYTHONPATH=/app/src
      
      # Qdrant Configuration (using env vars)
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=${QDRANT_PORT:-6336}
      - QDRANT_HTTP_PORT=${QDRANT_HTTP_PORT:-6335}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-inmpara_vault}
      
      # Processing Configuration (using env vars)
      - DEFAULT_CONFIDENCE_THRESHOLD=${DEFAULT_CONFIDENCE_THRESHOLD:-0.85}
      - AUTO_APPROVE_HIGH_CONFIDENCE=${AUTO_APPROVE_HIGH_CONFIDENCE:-true}
      - BATCH_SIZE=${BATCH_SIZE:-50}
      
      # Feature Flags (using env vars)
      - ENABLE_ANALYTICS=${ENABLE_ANALYTICS:-true}
      - ENABLE_MOC_GENERATION=${ENABLE_MOC_GENERATION:-true}
      - ENABLE_KNOWLEDGE_GRAPH=${ENABLE_KNOWLEDGE_GRAPH:-true}
      - ENABLE_BULK_REPROCESS=${ENABLE_BULK_REPROCESS:-true}
      - ENABLE_VECTOR_SEARCH=${ENABLE_VECTOR_SEARCH:-true}
    
    volumes:
      # Mount vault using env var (host path : container path)
      - ${VAULT_PATH}:${CONTAINER_VAULT_PATH:-/app/vault}:rw
      # Logs
      - inmpara_logs:${CONTAINER_LOG_PATH:-/app/logs}
    
    ports:
      - "${MCP_PORT:-8000}:8000"  # For future HTTP transport
    
    healthcheck:
      test: ["CMD", "python3", "-c", "from src.server.mcp_server import INMPARAServer; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Future containers for multi-container setup:
  # sqlite:    # Dedicated SQLite service (future)
  # ui:        # Web UI service (future)

volumes:
  qdrant_storage:
    driver: local
  inmpara_logs:
    driver: local

networks:
  default:
    name: inmpara-network
